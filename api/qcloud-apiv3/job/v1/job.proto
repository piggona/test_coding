// Copyright 2019 Tencent Cloud authors.
//
// You may not use this file outside of Tencent Cloud project.

syntax = "proto3";
package jobs.v1;

option go_package = "git.code.oa.com/too/too-service/apigen/job/v1;jobs";
import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "qcloudapis/qcloud/annotations.proto";
import "third_party/validate.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "qcloudapidoc/options/annotations.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "job service";
    version: "1.0";
  };
};

// 云api版本，日期格式
option (qcloudapidoc.options.version) = "2021-01-21";
// 云图平台的产品名称
option (qcloudapidoc.options.product_name) = "too";

// JobService 作业操作接口
service JobService {
  option (qcloudapidoc.options.service_opt) = {
    cli_visibility:true,
    sign_and_auth: true,
    tags: ["too"]
    error_codes: [
      "InternalError.DbError",
      "InternalError.System",
      "InternalError.CosError",
      "InvalidParameter",
      "InternalError"
    ]
    system_params:[
      "RequestId",
      "Action",
      "AppId",
      "Uin",
      "SubAccountUin",
      "ClientIp",
      "Region",
      "Token",
      "Version",
      "Language"
    ]
  };

  // 创建作业
  rpc CreateJob(CreateJobRequest) returns (CreateJobResponse) {
    option (google.api.http) = {
      post: "/v1/jobs"
      body: "*"
    };

    option (qcloudapis.qcloud.v3) = {
      path: "/qcloudapi/too/v1:CreateJob"
    };

    option (qcloudapidoc.options.method_opt) = {
      action_name: "创建作业接口"
      doc_category:"Job作业相关接口"
      error_codes:[
        "InternalError.DbError",
        "InternalError.System",
        "FailedOperation.HttpRequestError",
        "InvalidParameter"
      ]
      tags: ["too"]
    };
  };

  // 获取作业列表
  rpc DescribeJobList(DescribeJobListRequest) returns (DescribeJobListResponse) {
    option (google.api.http) = {
      get: "/v1/jobs"
    };

    option (qcloudapis.qcloud.v3) = {
      path: "/qcloudapi/too/v1:DescribeJobList"
    };

    option (qcloudapidoc.options.method_opt) = {
      action_name: "获取作业列表接口"
      doc_category:"Job作业相关接口"
      error_codes:[
        "InternalError.DbError",
        "InternalError.System",
        "FailedOperation.HttpRequestError",
        "InvalidParameter"
      ]
      tags: ["too"]
    };
  };

  // 修改作业
  rpc ModifyJob(ModifyJobRequest) returns (ModifyJobResponse) {
    option (google.api.http) = {
      put: "/v1/jobs/{JobID}"
    };

    option (qcloudapis.qcloud.v3) = {
      path: "/qcloudapi/too/v1:ModifyJob"
    };

    option (qcloudapidoc.options.method_opt) = {
      action_name: "修改作业接口"
      doc_category:"Job作业相关接口"
      error_codes:[
        "InternalError.DbError",
        "InternalError.System",
        "FailedOperation.HttpRequestError",
        "InvalidParameter"
      ]
      tags: ["too"]
    };
  };

  // 获取作业详情
  rpc DescribeJobDetail(DescribeJobDetailRequest) returns (DescribeJobDetailResponse) {
    option (google.api.http) = {
      get: "/v1/jobs/{JobID}"
    };

    option (qcloudapis.qcloud.v3) = {
      path: "/qcloudapi/too/v1:DescribeJobDetail"
    };

    option (qcloudapidoc.options.method_opt) = {
      action_name: "获取作业详情接口"
      doc_category:"Job作业相关接口"
      error_codes:[
        "InternalError.DbError",
        "InternalError.System",
        "FailedOperation.HttpRequestError",
        "InvalidParameter"
      ]
      tags: ["too"]
    };
  };

  // 获取作业环境变量
  rpc DescribeJobEnvVarList(DescribeJobEnvVarListRequest) returns (DescribeJobEnvVarListResponse) {
    option (google.api.http) = {
      get: "/v1/jobs/{JobID}/environments"
    };

    option (qcloudapis.qcloud.v3) = {
      path: "/qcloudapi/too/v1:DescribeJobEnvVarList"
    };

    option (qcloudapidoc.options.method_opt) = {
      action_name: "获取作业环境变量接口"
      doc_category:"Job作业相关接口"
      error_codes:[
        "InternalError.DbError",
        "InternalError.System",
        "FailedOperation.HttpRequestError",
        "InvalidParameter"
      ]
      tags: ["too"]
    };
  };

  // 获取作业主机
  rpc DescribeJobHostList(DescribeJobHostListRequest) returns (DescribeJobHostListResponse) {
    option (google.api.http) = {
      get: "/v1/jobs/{JobID}/hosts"
    };

    option (qcloudapis.qcloud.v3) = {
      path: "/qcloudapi/too/v1:DescribeJobHostList"
    };

    option (qcloudapidoc.options.method_opt) = {
      action_name: "获取作业主机接口"
      doc_category:"Job作业相关接口"
      error_codes:[
        "InternalError.DbError",
        "InternalError.System",
        "FailedOperation.HttpRequestError",
        "InvalidParameter"
      ]
      tags: ["too"]
    };
  };

  // 执行作业
  rpc ExecuteJob(ExecuteJobRequest) returns (ExecuteJobResponse) {
    option (google.api.http) = {
      post: "/v1/jobs/{JobID}:execute"
    };

    option (qcloudapis.qcloud.v3) = {
      path: "/qcloudapi/too/v1:ExecuteJob"
    };

    option (qcloudapidoc.options.method_opt) = {
      action_name: "执行作业接口"
      doc_category:"Job作业相关接口"
      error_codes:[
        "InternalError.DbError",
        "InternalError.System",
        "FailedOperation.HttpRequestError",
        "InvalidParameter"
      ]
      tags: ["too"]
    };
  };

  // 删除作业
  rpc DeleteJob(DeleteJobRequest) returns (DeleteJobResponse) {
    option (google.api.http) = {
      delete: "/v1/jobs/{JobID}"
    };

    option (qcloudapis.qcloud.v3) = {
      path: "/qcloudapi/too/v1:DeleteJob"
    };

    option (qcloudapidoc.options.method_opt) = {
      action_name: "删除作业接口"
      doc_category:"Job作业相关接口"
      error_codes:[
        "InternalError.DbError",
        "InternalError.System",
        "FailedOperation.HttpRequestError",
        "InvalidParameter"
      ]
      tags: ["too"]
    };
  };

  // 重试作业
  rpc ReExecuteJob(ReExecuteJobRequest) returns (ReExecuteJobResponse) {
    option (google.api.http) = {
      post: "/v1/reExecuteJobs/{JobID}/reExecute"
    };

    option (qcloudapis.qcloud.v3) = {
      path: "/qcloudapi/too/v1:ReExecuteJob"
    };

    option (qcloudapidoc.options.method_opt) = {
      action_name: "作业重试接口"
      doc_category:"Job作业相关接口"
      error_codes:[
        "InternalError.DbError",
        "InternalError.System",
        "FailedOperation.HttpRequestError",
        "InvalidParameter"
      ]
      tags: ["too"]
    };
  };

  // 克隆作业
  rpc CloneJob(CloneJobRequest) returns (CloneJobResponse) {
    option (google.api.http) = {
      post: "/v1/jobs/{OriginalJobID}:clone"
    };

    option (qcloudapis.qcloud.v3) = {
      path: "/qcloudapi/too/v1:CloneJob"
    };

    option (qcloudapidoc.options.method_opt) = {
      action_name: "克隆作业列表"
      doc_category:"Job作业相关接口"
      error_codes:[
        "InternalError.DbError",
        "InternalError.System",
        "FailedOperation.HttpRequestError",
        "InvalidParameter"
      ]
      tags: ["too"]
    };
  };

  // 设置作业主机状态
  rpc ModifyJobHostsStatus(SetJobHostsStatusRequest) returns (SetJobHostsStatusResponse) {
    option (google.api.http) = {
      post: "/v1/jobs/{JobID}/hosts/{HostIDs}:setstatus"
    };

    option (qcloudapis.qcloud.v3) = {
      path: "/qcloudapi/too/v1:ModifyJobHostsStatus"
    };

    option (qcloudapidoc.options.method_opt) = {
      action_name: "设置作业主机状态接口"
      doc_category:"Job作业相关接口"
      error_codes:[
        "InternalError.DbError",
        "InternalError.System",
        "FailedOperation.HttpRequestError",
        "InvalidParameter"
      ]
      tags: ["too"]
    };
  }

  // 设置作业状态
  rpc ModifyJobStatus(ModifyJobStatusRequest) returns (ModifyJobStatusResponse) {
    option (google.api.http) = {
      post: "/v1/jobs/{JobID}:setstatus"
    };

    option (qcloudapis.qcloud.v3) = {
      path: "/qcloudapi/too/v1:ModifyJobStatus"
    };

    option (qcloudapidoc.options.method_opt) = {
      action_name: "设置作业状态接口"
      doc_category:"Job作业相关接口"
      error_codes:[
        "InternalError.DbError",
        "InternalError.System",
        "FailedOperation.HttpRequestError",
        "InvalidParameter"
      ]
      tags: ["too"]
    };
  }
}

// 模版类型
enum TemplateType {
  // 私有模版
  Private = 0;
  // 公有模版
  Public = 1;
}

// 来源
enum Source {
  // tag导入
  INTERNAL_IMPORT = 0;
  // ip add
  IP_ADD = 1;
  // csv 导入
  CSV_IMPORT = 2;
}

// 创建作业的请求参数
message CreateJobRequest {
  // 作业名称
  string Name = 1 [(validate.rules).string = {min_len : 1, max_len : 60}, (qcloudapidoc.options.filed_opt) = {public:true,required:true}];
  // 作业描述
  string Description = 2 [(validate.rules).string = {min_len : 1, max_len : 200}, (qcloudapidoc.options.filed_opt) = {public:true,required:true}];
  // 模板ID
  string TemplateID = 3 [(validate.rules).string.min_len = 1, (qcloudapidoc.options.filed_opt) = {public:true,required:true}];
  // 执行作业使用的模板内容
  string TemplateContent = 4 [(validate.rules).string.min_len = 1, (qcloudapidoc.options.filed_opt) = {public:true,required:true}];
  // 环境信息
  repeated JobEnvironment Environment = 5 [(validate.rules).repeated.min_items = 1, (qcloudapidoc.options.filed_opt) = {public:true,required:true}];
  // 环境变量列表
  repeated EnvVar EnvVarList = 6 [(qcloudapidoc.options.filed_opt) = {public:true,required:true}];
  // 执行模板入口
  string Entry = 7 [(validate.rules).string.min_len = 1, (qcloudapidoc.options.filed_opt) = {public:true,required:true}];
  // 模板类型
  TemplateType TemplateType = 8 [(validate.rules).enum.defined_only = true, (qcloudapidoc.options.filed_opt) = {public:true,required:true}];
}

// 环境变量
message EnvVar {
  // 环境变量键
  string Key = 1;
  // 环境变量值
  string Value = 2;
  // 是否为敏感信息
  bool Sensitive = 3;
}

// 创建作业的响应参数
message CreateJobResponse {
  // 作业ID
  string JobID = 1 ;
}

// 获取作业列表的请求参数
message DescribeJobListRequest  {
  // 搜索关键词
  string SearchKey = 1 [(qcloudapidoc.options.filed_opt) = {public:true}];
  // 过滤条件
  repeated Filter Filters = 2 [(qcloudapidoc.options.filed_opt) = {public:true}];
  // 排序条件
  string OrderBy = 3 [(qcloudapidoc.options.filed_opt) = {public:true}];
  // 分页，每页显示条目数
  int32 Limit = 4 [(qcloudapidoc.options.filed_opt) = {public:true}];
  // 分页，当前页偏移量
  int32 Offset = 5 [(qcloudapidoc.options.filed_opt) = {public:true}];
  // 查询年份
  int32 Year = 6 [(validate.rules).int32.gte = 2021, (qcloudapidoc.options.filed_opt) = {public:true}];
  // 查询月份
  int32 Month = 7 [(validate.rules).int32 = {gte: 1, lte:12}, (qcloudapidoc.options.filed_opt) = {public:true}];
}

// 获取作业列表的响应参数
message DescribeJobListResponse  {
  // 结果总数
  int32 TotalCount = 1;
  // 作业详情集合
  repeated Job JobList = 2;
}

// 作业查询过滤器
message Filter {
  // 需要过滤的字段, 使用下划线连接，而非驼峰
  string Name = 1;
  // 字段的过滤值
  repeated string Values = 2;
}

// 作业列表详情
message Job {
  // 作业ID
  string ID = 1;
  // 作业名称
  string Name = 2;
  // 作业状态
  JobStatus Status = 3;
  // 作业描述
  string Description = 4;
  // 作业创建时间
  google.protobuf.Timestamp CreateTime = 5;
  // 作业执行开始时间
  google.protobuf.Timestamp StartTime = 6;
  // 作业执行完成时间
  google.protobuf.Timestamp FinishTime = 7;
}

// 作业详情
message JobDetail {
  // 作业ID
  string ID = 1;
  // 作业名称
  string Name = 2;
  // 作业状态
  JobStatus Status = 3;
  // 作业描述
  string Description = 4;
  // 任务进度百分比
  int32 Progress = 5;
  // 作业创建时间
  google.protobuf.Timestamp CreateTime = 6;
  // 作业执行开始时间
  google.protobuf.Timestamp StartTime = 7;
  // 作业执行完成时间
  google.protobuf.Timestamp FinishTime = 8;
  // 作业环境信息
  repeated JobEnvironment Environment = 9;
  // 执行模板入口
  string Entry = 10;
}

// 修改作业的请求参数
message ModifyJobRequest {
  // 作业名称
  string Name = 1 [(validate.rules).string = {min_len : 1, max_len : 60}, (qcloudapidoc.options.filed_opt) = {public:true, required:true}];
  // 作业描述
  string Description = 2 [(validate.rules).string = {min_len : 1, max_len : 200}, (qcloudapidoc.options.filed_opt) = {public:true, required:true}];
  // 模板ID
  string TemplateID = 3 [(validate.rules).string.min_len = 1, (qcloudapidoc.options.filed_opt) = {public:true, required:true}];
  // 执行作业使用的模板内容
  string TemplateContent = 4 [(validate.rules).string.min_len = 1, (qcloudapidoc.options.filed_opt) = {public:true, required:true}];
  // 作业环境信息
  repeated JobEnvironment Environment = 5 [(validate.rules).repeated.min_items = 1, (qcloudapidoc.options.filed_opt) = {public:true, required:true}];
  // 环境变量列表
  repeated EnvVar EnvVarList = 6 [(qcloudapidoc.options.filed_opt) = {public:true}];
  // 作业ID
  string JobID = 7 [(validate.rules).string = {prefix: "job-"}, (qcloudapidoc.options.filed_opt) = {public:true, required:true}];
  // 执行模板入口
  string Entry = 8 [(validate.rules).string.min_len = 1, (qcloudapidoc.options.filed_opt) = {public:true, required:true}];
  // 模板类型
  TemplateType TemplateType = 9 [(validate.rules).string.min_len = 1, (qcloudapidoc.options.filed_opt) = {public:true, required:true}];
}

// 修改作业的响应参数
message ModifyJobResponse {

}

// 获取作业详情的请求参数
message DescribeJobDetailRequest {
  // 作业ID
  string JobID = 1 [(validate.rules).string = {prefix: "job-", len: 14}, (qcloudapidoc.options.filed_opt) = {public:true, required:true}];
}

// 获取作业详情的响应参数
message DescribeJobDetailResponse {
  // 作业详情
  JobDetail JobDetail = 1;
}

// 获取作业环境变量的请求参数
message DescribeJobEnvVarListRequest {
  // 作业ID
  string JobID = 1 [(validate.rules).string = {prefix: "job-", len: 14}, (qcloudapidoc.options.filed_opt) = {public:true, required:true}];
}

// 获取作业环境变量的响应参数
message DescribeJobEnvVarListResponse {
  // 环境变量列表
  repeated EnvVar EnvVarList = 1;
}

// 获取作业主机的请求参数
message DescribeJobHostListRequest {
  // 作业ID
  string JobID = 1 [(validate.rules).string = {prefix: "job-", len: 14}, (qcloudapidoc.options.filed_opt) = {public:true, required:true}];
  // 分页，每页显示条目数
  int32 Limit = 2 [(qcloudapidoc.options.filed_opt) = {public:true}];
  // 分页，当前页偏移量
  int32 Offset = 3 [(qcloudapidoc.options.filed_opt) = {public:true}];
  // 过滤条件
  repeated Filter Filters = 4 [(qcloudapidoc.options.filed_opt) = {public:true}];
  // 搜索关键词
  string SearchKey = 5 [(qcloudapidoc.options.filed_opt) = {public:true}];
}

// 获取作业主机的响应参数
message DescribeJobHostListResponse {
  // 主机列表
  repeated JobHost JobHostList = 1;
  // 主机总数
  int32 TotalCount = 2;
}

// 作业的主机信息
message JobHost {
  // 公网IP
  string  PublicIP = 1;
  // 内网IP
  string  PrivateIP = 2;
  // 主机的作业执行状态
  JobStatus Status = 3;
  // 主机所在的分组名称
  repeated string GroupName = 4;
  // 主机来源
  Source Source = 5;
  // 实例id
  string InstanceID = 6;
  // 实例名称
  string InstanceName = 7;
  // Host内部id
  string ID = 8;
  // 地域
  string Region = 9;
}

// 执行作业的请求参数
message ExecuteJobRequest {
  // 作业ID
  string JobID = 1 [(validate.rules).string = {prefix: "job-", len: 14}, (qcloudapidoc.options.filed_opt) = {public:true, required:true}];
  // 作业类型。DryRun:预执行作业，Run:执行作业
  JobType Type = 2 [(validate.rules).string.min_len = 1, (qcloudapidoc.options.filed_opt) = {public:true, required:true}];
}

// 执行作业的返回参数
message ExecuteJobResponse {
}

// 删除作业的请求参数
message DeleteJobRequest {
  // 作业ID
  string JobID = 1 [(validate.rules).string = {prefix: "job-", len: 14}, (qcloudapidoc.options.filed_opt) = {public:true, required:true}];
}

// 删除作业的响应参数
message DeleteJobResponse {
}

// 重试作业的请求参数
message ReExecuteJobRequest {
  // 作业ID
  string JobID = 1 [(validate.rules).string = {prefix: "job-", len: 14}, (qcloudapidoc.options.filed_opt) = {public:true, required:true}];
  // 作业使用的主机信息列表。为空表示使用上次作业的全部Host
  repeated string HostIDList = 2 [(qcloudapidoc.options.filed_opt) = {public:true}];
}

// 重试作业的响应参数
message ReExecuteJobResponse {
}

// 克隆作业的请求参数
message CloneJobRequest {
  // 原作业ID
  string OriginalJobID = 1 [(validate.rules).string.min_len = 1, (qcloudapidoc.options.filed_opt) = {public:true, required:true}];
}

// 克隆作业的响应参数
message CloneJobResponse {
  // 新作业ID
  string JobID = 1 [(validate.rules).string = {prefix: "job-", len: 14}, (qcloudapidoc.options.filed_opt) = {public:true, required:true}];
}

// 作业状态
enum JobStatus {
  Init = 0;
  DryRunning = 1;
  DryRan = 2;
  DryRunFailed = 3;
  Running = 4;
  Ran = 5;
  RunFailed = 6;
}

// Job类型
enum JobType {
  DryRun = 0;
  Run = 1;
}

// 更新作业主机状态的请求参数
message SetJobHostsStatusRequest {
  // 作业ID
  string JobID = 1 [(validate.rules).string = {prefix: "job-"}, (qcloudapidoc.options.filed_opt) = {public:true, required:true}];
  // 更新的status
  JobStatus Status = 2 [(qcloudapidoc.options.filed_opt) = {public:true}];
  // 要设置的主机列表
  repeated string HostIDs = 3 [(qcloudapidoc.options.filed_opt) = {public:true}];
}

// 更新作业主机状态的响应参数
message SetJobHostsStatusResponse {
}

// 更新作业状态的请求参数
message ModifyJobStatusRequest {
  // 作业ID
  string JobID = 1 [(validate.rules).string = {prefix: "job-"}, (qcloudapidoc.options.filed_opt) = {public:true, required:true}];
  // 更新的status
  JobStatus Status = 2 [(qcloudapidoc.options.filed_opt) = {public:true}];
}

// 更新作业状态的响应参数
message ModifyJobStatusResponse {
}

// 作业环境信息
message JobEnvironment {
  // 环境ID
  string ID = 1;
  // 主机信息
  repeated string Hosts = 2;
}
